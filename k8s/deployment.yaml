
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "flask"
  namespace: "default"
  labels:
    app: "flask"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "flask"
  template:
    metadata:
      labels:
        app: "flask"
    spec:
      containers:
      - name: "flask"
        image: gcr.io/wide-pulsar-254811/backend_google
        imagePullPolicy: Never
        resources:
          requests:
            memory: 512Mi
            cpu: "0.05"
          limits:
            memory: 2048Mi
            cpu: "2.0"
        env:
        - name: "POSTGRES_DB"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_DB"
              name: "postgres-config"
        - name: "POSTGRES_USER"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_USER"
              name: "postgres-config"
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_PASSWORD"
              name: "postgres-config"
        - name: "PROJECT_NAME"
          valueFrom:
            configMapKeyRef:
              key: "PROJECT_NAME"
              name: "postgres-config"



            
---
apiVersion: "v1"
kind: "Service"
metadata:
  name: "backend-service"
  namespace: "default"
  labels:
    app: "flask"
spec:
  type: "LoadBalancer"
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 80
  selector:
    app: "flask"

---
apiVersion: "v1"
kind: "ConfigMap"
metadata:
  name: "postgres-config"
  namespace: "default"
  labels:
    app: "postgres"
data:
  POSTGRES_DB: "db"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "changethis"
  PROJECT_NAME: 'BASE'


---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "postgres"
  namespace: "default"
  labels:
    app: "postgres"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "postgres"
  template:
    metadata:
      labels:
        app: "postgres"
    spec:
      containers:
      - name: "postgres"
        image: postgres:11
        env:
        - name: "POSTGRES_DB"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_DB"
              name: "postgres-config"
        - name: "POSTGRES_USER"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_USER"
              name: "postgres-config"
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_PASSWORD"
              name: "postgres-config"
        ports:
          - containerPort: 5432
            name: postgres
        volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: "webapp-pgdata"
      volumes:
        - hostPath:
            path: "/home/docker/pgdata"
          name: webapp-pgdata

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 0.5Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
    - port: 5432
  selector:
    app: postgres


